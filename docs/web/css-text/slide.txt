<style type="text/css">
  .reveal p {
    text-align: justify;
    font-size: 0.8em;
  }
  .reveal ul {
    display: block;
  }
  .reveal ol {
    display: block;
  }
</style>

# CSS 文本样式

---

## 文本样式

分为四个方面介绍文本样式:

1. 基本样式
2. 列表样式
3. 链接样式
4. 网络字体

<!-- .element style="font-size: 70%"-->

---

## 文本样式-基本样式

元素中的文本是布置在元素的内容框中，以内容区域的左上角作为起点，一直延续到行的结束部分，然后自动换行，直到所有内容都放入了盒子中。强制换行的话，可以使用 `<br>` 元素。

- 字体样式
- 文本布局

<!-- .element style="font-size: 70%"-->

--

### 字体样式-颜色

字体颜色，可以采用英文单词 red / 颜色代码 #FF0000 / RGB 值 rgb(255,0,0) 。

```CSS
p {
  color: red;
}
```

--

### 字体样式-字体 (1/3)

`font-family` 修改页面显示的字体，包括 serif / sans-serif / monospace 等。

| 名称       | 定义                                                                      | 示例                                                         |
| ---------- | ------------------------------------------------------------------------- | ------------------------------------------------------------ |
| serif      | 有衬线的字体 （衬线一词是指字体笔画尾端的小装饰，存在于某些印刷体字体中） | <span style="font-family:'Times New Roman';">elephant</span> |
| sans-serif | 没有衬线的字体。                                                          | <span style="font-family:Arial;">elephant</span>             |
| monospace  | 每个字符具有相同宽度的字体，通常用于代码列表。                            | <span style="font-family:'Courier New';">elephant</span>     |

<!-- .element: style="font-size:70%;" -->

--

### 字体样式-字体 (2/3)

网页安全字体，大部分系统和浏览器都能够正确显示的字体。

| 字体名称        | 泛型       | 注意                                                                                                                          |
| --------------- | ---------- | ----------------------------------------------------------------------------------------------------------------------------- |
| Arial           | sans-serif | 通常认为最佳做法还是添加 Helvetica 作为 Arial 的替代品，Helvetica 被认为具有更好的形状，即使 Arial 使用更加广泛。             |
| Courier New     | monospace  | 某些操作系统有一个 Courier New 字体的替代版本叫 Courier。使用 Courier New 作为 Courier 的首选替代方案，被认为是最佳做法。     |
| Times New Roman | serif      | 某些操作系统有一个 Times New Roman 字体的替代版本叫 Times。使用 Times 作为 Times New Roman 的首选替代方案，被认为是最佳做法。 |

<!-- .element: style="font-size:70%;" -->

--

### 字体样式-字体栈 (3/3)

在 `font-family` 中写多个字体，浏览器会按照先后顺序使用。

```CSS
p {
  font-family: Helvetica, Arial, sans-serif;
}
```

--

### 字体样式-大小

`font-size` 改变文本大小。

| 单位 | 示例                                                                                                          |
| ---- | ------------------------------------------------------------------------------------------------------------- |
| px   | 将像素的值赋予给你的文本。这是一个绝对单位， 它导致了在任何情况下，页面上的文本所计算出来的像素值都是一样的。 |
| em   | 1em 等于当前元素的父元素上设置的字体大小                                                                      |
| rem  | 类似 em ，但 1rem 等于根元素 html 设置的字体大小。                                                            |

<!-- .element: style="font-size:70%;" -->

--

### 字体样式-斜体

`font-style` 使得字体斜体。

| 值      | 作用                               |
| ------- | ---------------------------------- |
| normal  | 将文本设置为普通字体               |
| italic  | 将文本设置为当前字体的斜体版本     |
| oblique | 如当前字体没有斜体版本，则模拟斜体 |

<!-- .element: style="font-size:70%;" -->

--

### 字体样式-粗细

`font-weight` 设置字体粗细。

| 值      | 作用           |
| ------- | -------------- |
| normal  | 字体的普通粗细 |
| bold    | 加粗的字体     |
| lighter | 更细的字体     |
| bolder  | 更粗的字体     |

<!-- .element: style="font-size:70%;" -->

--

### 字体样式-转换

`text-transform` 设置文本转换。

| 值         | 作用                     |
| ---------- | ------------------------ |
| none       | 防止任何转换             |
| uppercase  | 全部转换为大写           |
| lowercase  | 全部转换为小写           |
| capitalize | 首字母大写               |
| full-width | 转换为全角，类似等宽字体 |

<!-- .element: style="font-size:70%;" -->

--

### 字体样式-装饰

`text-decoration` 设置文本装饰。

| 值           | 作用                       |
| ------------ | -------------------------- |
| none         | 取消已经存在的任何文本装饰 |
| underline    | 文本下划线                 |
| overline     | 文本上划线                 |
| line-through | 文本中间划线               |

<!-- .element: style="font-size:70%;" -->

--

### 字体样式-阴影

`text-shadow` 设置文本阴影。

```CSS
h1 {
  text-shadow: 4px 4px 5px red;
}
```

| 顺序 | 作用                                                         |
| ---- | ------------------------------------------------------------ |
| 1    | 必选，阴影与原始文本的水平偏移，常用 px 。                   |
| 2    | 必选，阴影与原始文本的垂直偏移。                             |
| 3    | 可选，模糊半径 - 更高的值意味着阴影分散得更广泛。默认为 0 。 |
| 4    | 阴影的基础颜色，如果没有指定，默认为 black.                  |

<!-- .element: style="font-size:70%;" -->

--

### 文本布局-对齐

`text-align` 设置文本对齐方式。

| 值      | 作用             |
| ------- | ---------------- |
| left    | 左对齐           |
| right   | 右对齐           |
| center  | 居中对齐         |
| justify | 展开文本两端对齐 |

<!-- .element: style="font-size:70%;" -->

--

### 文本对齐-行高

`line-height` 设置行高。

```CSS
line-height: 1.5
```

--

### 文本对齐-字母和单词间距

`letter-spacing` 设置字母间距，`word-spacing` 设置单词间距。

```CSS
p {
  letter-spacing: 2px;
  word-spacing: 4px;
}
```

---

## 文本样式-列表样式

`<ul>` / `<ol>` 元素设置 `margin` 的顶部/底部为: `16px(1em)` / `0`; 和 `padding-left: 40px(2.5em);`（在这里注意的是浏览器默认字体大小为 16px）。
<br> `<li>` 默认是没有设置间距的。

--

### 列表特定样式-符号样式

`list-style-type` 属性设置项目符号点的类型。

| 值                   | 作用                    |
| -------------------- | ----------------------- |
| decimal              | `<ol>` 默认十进制       |
| decimal-leading-zero | `<ol>` 十进制且前面补 0 |
| upper-roman          | `<ol>` 使用大写罗马数字 |
| lower-roman          | `<ol>` 使用小写罗马数字 |
| disc                 | `<ul>` 默认实心圆点     |
| circle               | `<ul>` 空心圆点         |
| square               | `<ul>` 实心方块         |

<!-- .element: style="font-size:70%;" -->

--

### 列表特定样式-符号位置

`list-style-position` 属性设置符号是在盒外还是盒内。

| 值      | 作用                     |
| ------- | ------------------------ |
| outside | 默认值，在内容区域之外。 |
| inside  | 在内容区域之内。         |

<!-- .element: style="font-size:70%;" -->

--

### 列表特定样式-自定义符号

`list-style-image` 使用自定义图片作为符号。

```CSS
ul {
  list-style-image: url(star.svg);
}
```

--

### 列表特定样式-计数

一些影响列表外观的属性，虽然不属于 CSS ，也放在这里学习。

| 属性     | 作用                                                              |
| -------- | ----------------------------------------------------------------- |
| start    | 规定 `<ol>` 从多少开始计数，`start="4"` 那么列表第一项编号为 4 。 |
| reversed | 倒序显示 `<ol>` 的项。                                            |
| value    | 这是 `<ol>` 中 `<li>` 的属性，直接指定项目的编号。                |

<!-- .element: style="font-size:70%;" -->

---

## 文本样式-链接样式

--

### 链接样式-伪类

修改链接样式需要用到`伪类`来实现。

| 伪类      | 作用                        |
| --------- | --------------------------- |
| a:link    | 未访问过链接样式。          |
| a:visited | 访问过的链接样式。          |
| a:hover   | 鼠标悬停时的链接样式        |
| a:focus   | 键盘 `Tab` 选中时的链接样式 |
| a:active  | 被激活/点击时的链接样式     |

<!-- .element: style="font-size:70%;" -->

--

### 链接样式-顺序

修改链接样式按照上面列表的顺序来定义，如果顺序不对，可能显示不正确。

```CSS
a {

}


a:link {

}

a:visited {

}

a:focus {

}

a:hover {

}

a:active {

}
```

---

## 文本样式-网络字体

使用 `font-family` 属性来控制字体时，需要提供一个或多个字体种类名称，浏览器会在列表中搜寻，直到找到它所运行的系统上可用的字体。但是，引入网络字体可以让浏览器自动下载某种本地不存在的字体。

```CSS
@font-face {
  font-family: "myFont";
  src: url("myFont.ttf");
}

p {
  font-family: "myFont", serif;
}
```

--

### 网络字体-使用在线的字体服务

1. 选择网络字体在线服务商；
2. 通过 `<link>` 引入它生成的 CSS ;
3. 在自己的 CSS 中使用字体。

---

# Q & A
