<style type="text/css">
  .reveal p {
    text-align: justify;
    font-size: 0.8em;
  }
  .reveal ul {
    display: block;
  }
  .reveal ol {
    display: block;
  }
</style>

# CSS 盒子样式

---

## CSS 盒模式

--

### 块状盒子 - block

块状盒子有以下特点：

— 行内方向(横向)扩充自身占据父容器的所有可用空间；
— 每个盒子都会自动换行；
— width / height 可以定义宽和高；
— padding / margin / border 会将其他盒子推开。

<!-- .element: style="font-size:70%;" -->

--

### 行内盒子 - inline

行内盒子有以下特点：

- 盒子不会换行；
- width / height 不起作用；
- padding / margin / border 不会将其他行内盒子推开。

<!-- .element: style="font-size:70%;" -->

---

## 盒子样式

盒子样式分为四个部分进行介绍：

- 基本样式
- 背景边界
- 表格样式
- 高级样式

<!-- .element: style="font-size:70%;" -->

---

## 盒子样式-基本样式

复习，盒子分为块状盒子 (block) 和内联盒子 (inline) ，两种盒子会在页面流 (page flow) 和元素之间的关系方面表现出不同行为。

<!-- .element: style="font-size:70%;" -->

| 行为                         | 块状盒子         | 内联盒子 |
| ---------------------------- | ---------------- | -------- |
| 换行                         | 是               | 否       |
| width / height               | 能够指定盒子宽高 | 不起作用 |
| 边距和边框是否推开其他原元素 | 是               | 否       |

<!-- .element: style="font-size:70%;" -->

--

### 基本样式-内部/外部

块状与内联都是盒子在页面上对外展示出来的样式，盒子内部也有样式。`display: flex` 可以使得盒子内容采用弹性盒子 (flexbox) 进行布局，该内容将在布局一节展开介绍。

<!-- .element: style="font-size:70%;" -->

```css
p,
ul {
  border: 2px solid rebeccapurple;
  padding: 0.5em;
}
.block,
li {
  border: 2px solid blue;
  padding: 0.5em;
}
ul {
  display: flex;
  list-style: none;
}
.block {
  display: block;
}
```

<!-- .element: style="float:left;width:48%;padding:1%;height:420px;display:flex;align-items:center;" -->

```html
<p>I am a paragraph. A short one.</p>
<ul>
  <li>Item One</li>
  <li>Item Two</li>
  <li>Item Three</li>
</ul>
<p>
  I am another paragraph. Some of the
  <span class="block">words</span>
  have been wrapped in a
  <span>span element</span>.
</p>
```

<!-- .element: style="float:left;width:48%;padding:1%;height:420px;display:flex;align-items:center;" -->

--

### 基本样式-盒模型组成部分

对于一个块状盒子来说，包括以下组成部分。

| 部分 | 作用                               | CSS          |
| ---- | ---------------------------------- | ------------ |
| 内容 | 显示盒子包含的内容，主要显示区域。 | width/height |
| 填充 | 内容部分和边框部分之间填充的空白。 | padding      |
| 边框 | 盒子的边框。                       | border       |
| 空白 | 最外层，和其他盒子之间的空白。     | margin       |

<!-- .element: style="font-size:70%;" -->

--

### 基本样式-标准/替代模型

盒模型一共分为两种：标准盒子 / 替代盒子，现代浏览器默认使用标准盒子，如果要强制使用替代盒子，则使用`box-sizing: border-box;`。

![标准](/courses-wiki/img/standard-box-model.png)

<!-- .element: style="float:left;width:48%;padding:1%;" -->

![替代](/courses-wiki/img/alternate-box-model.png)

<!-- .element: style="float:left;width:48%;padding:1%;" -->

--

### 基本样式-外边距

| CSS                            | 作用                           |
| ------------------------------ | ------------------------------ |
| margin: value;                 | 四周同样大小的空白。           |
| margin: vertical horizontal;   | 分别定义纵向，横向的空白。     |
| margin: top horizontal bottom; | 定义上面，横向，下面的空白。   |
| margin: top right bottom left; | 分别定义上、右、下、左的空白。 |

<!-- .element: style="font-size:70%;" -->

```CSS
.box {
  margin-top: -40px;
  margin-right: 30px;
  margin-bottom: 40px;
  margin-left: 4em;
}
```

<!-- .element: style="float:left;width:48%;padding:1%;height:300px;display:flex;align-items:center;" -->

```html
<div class="container">
  <div class="box">Change my margin.</div>
</div>
```

<!-- .element: style="float:left;width:48%;padding:1%;height:300px;display:flex;align-items:center;" -->

--

### 基本样式-外边距塌陷

如果你有两个外边距相接的元素，这些外边距将合并为一个外边距，即最大的单个外边距的大小。

```CSS
.one {
  margin-bottom: 50px;
}

.two {
  margin-top: 30px;
}
```

<!-- .element: style="float:left;width:48%;padding:1%;height:420px;display:flex;align-items:center;" -->

```html
<div class="container">
  <p class="one">I am paragraph one.</p>
  <p class="two">I am paragraph two.</p>
</div>
```

<!-- .element: style="float:left;width:48%;padding:1%;height:420px;display:flex;align-items:center;" -->

--

### 基本样式-边框

边框与 margin 类似，也可以对四周分别进行定义，同时，边框除了宽度以外还可以定义样式和颜色。

```CSS
.container {
  border-top: 5px dotted green;
  border-right: 1px solid black;
  border-bottom: 20px double rgb(23,45,145);
}

.box {
  border: 1px solid #333333;
  border-top-style: dotted;
  border-right-width: 20px;
  border-bottom-color: hotpink;
}
```

<!-- .element: style="float:left;width:48%;padding:1%;height:420px;display:flex;align-items:center;" -->

```html
<div class="container">
  <div class="box">Change my borders.</div>
</div>
```

<!-- .element: style="float:left;width:48%;padding:1%;height:420px;display:flex;align-items:center;" -->

--

### 基本样式-填充

| CSS                             | 作用                           |
| ------------------------------- | ------------------------------ |
| padding: value;                 | 四周同样大小的填充。           |
| padding: vertical horizontal;   | 分别定义纵向，横向的填充。     |
| padding: top horizontal bottom; | 定义上面，横向，下面的填充。   |
| padding: top right bottom left; | 分别定义上、右、下、左的填充。 |

<!-- .element: style="font-size:70%;" -->

```CSS
.box {
  padding-top: 0;
  padding-right: 30px;
  padding-bottom: 40px;
  padding-left: 4em;
}

.container {
  padding: 20px;
}
```

<!-- .element: style="float:left;width:48%;padding:1%;height:300px;display:flex;align-items:center;" -->

```html
<div class="container">
  <div class="box">Change my padding.</div>
</div>
```

<!-- .element: style="float:left;width:48%;padding:1%;height:300px;display:flex;align-items:center;" -->

--

### 基本样式-内联盒子

以上样式都可以应用于块状盒子，但是对于内联盒子，`width/height` 是无效的，`margin/border/padding` 虽然有效，但不会推开其他元素。

```CSS
span {
  margin: 20px;
  padding: 20px;
  width: 80px;
  height: 50px;
  background-color: lightblue;
  border: 2px solid blue;
}
```

<!-- .element: style="float:left;width:48%;padding:1%;height:300px;display:flex;align-items:center;" -->

```html
<p>
  I am a paragraph and this is a <span>span</span> inside that paragraph. A span
  is an inline element and so does not respect width and height.
</p>
```

<!-- .element: style="float:left;width:48%;padding:1%;height:300px;display:flex;align-items:center;" -->

---

## 盒子样式-背景边框

--

### 背景边框-背景颜色

通过 `background-color` 可以改变盒子的背景颜色，值和字体的颜色值一样，可以采用多种形式。

```CSS
.box {
  background-color: #567895;
}

h2 {
  background-color: black;
  color: white;
}
span {
  background-color: rgba(255,255,255,.5);
}
```

<!-- .element: style="float:left;width:48%;padding:1%;height:300px;display:flex;align-items:center;" -->

```html
<div class="box">
  <h2>Background Colors</h2>
  <p>Try changing the background <span>colors</span>.</p>
</div>
```

<!-- .element: style="float:left;width:48%;padding:1%;height:300px;display:flex;align-items:center;" -->

--

### 背景边框-背景图片

通过 `background-image` 可以指定背景图片，图片大小不一定与盒子大小一致。

```CSS
.a {
  background-image: url(https://mdn.github.io/css-examples/learn/backgrounds-borders/balloons.jpg);
}

.b {
  background-image: url(https://mdn.github.io/css-examples/learn/backgrounds-borders/star.png);
}
```

<!-- .element: style="float:left;width:48%;padding:1%;height:300px;display:flex;align-items:center;" -->

```html
<div class="wrapper">
  <div class="a"></div>
  <div class="b"></div>
</div>
```

<!-- .element: style="float:left;width:48%;padding:1%;height:300px;display:flex;align-items:center;" -->

--

### 背景边框-图片重复

通过 `background-repeat` 可以指定背景图片是否重复以及重复方向。

| CSS                          | 作用                 |
| ---------------------------- | -------------------- |
| background-repeat: no-repeat | 图片不会重复         |
| background-repeat: repeat-x  | 图片横向重复         |
| background-repeat: repeat-y  | 图片纵向重复         |
| background-repeat: repeat    | 默认，图片纵横向重复 |

<!-- .element: style="font-size:70%;" -->

--

### 背景边框-图片大小

通过 `background-size` 可以指定背景图片大小。

| CSS                            | 作用                                     |
| ------------------------------ | ---------------------------------------- |
| background-size: cover;        | 图片保持原比例并确保占满盒子内容空间。   |
| background-size: contain;      | 图片拉伸以适应盒子内容空间，不保证比例。 |
| background-size: width height; | 指定图片的 width 和 height。             |

<!-- .element: style="font-size:70%;" -->

--

### 背景边框-图片位置

通过 `background-position` 可以指定背景图片相对于左上角 (0,0) 的位置，以下方式可以自由组合。

| CSS                                      | 作用                                                  |
| ---------------------------------------- | ----------------------------------------------------- |
| background-position: top;                | 指定图片贴着某一边，比如 top / bottom / left / right. |
| background-position: bottom 20px;        | 图片贴着底部，并离左侧 20px。                         |
| background-position: top 20px right 10%; | 图片离顶部 20px 离右侧 10% 宽度。                     |

<!-- .element: style="font-size:70%;" -->

--

## 背景边框-边框

圆角矩形 `border-radius`。

```CSS
.box {
  border: 10px solid rebeccapurple;
  border-radius: 1em;
  border-top-right-radius: 10% 30%;
}
```

<!-- .element: style="float:left;width:48%;padding:1%;height:300px;display:flex;align-items:center;" -->

```html
<div class="box">
  <h2>Borders</h2>
  <p>Try changing the borders.</p>
</div>
```

<!-- .element: style="float:left;width:48%;padding:1%;height:300px;display:flex;align-items:center;" -->

---

## 盒子样式-表格样式

尝试美化以下表格。

```html
<table>
  <caption>
    A summary of the UK's most famous punk bands
  </caption>
  <thead>
    <tr>
      <th scope="col">Band</th>
      <th scope="col">Year formed</th>
      <th scope="col">No. of Albums</th>
      <th scope="col">Most famous song</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th scope="row">Buzzcocks</th>
      <td>1976</td>
      <td>9</td>
      <td>Ever fallen in love (with someone you shouldn't've)</td>
    </tr>
    <tr>
      <th scope="row">The Clash</th>
      <td>1976</td>
      <td>6</td>
      <td>London Calling</td>
    </tr>

    ... some rows removed for brevity

    <tr>
      <th scope="row">The Stranglers</th>
      <td>1974</td>
      <td>17</td>
      <td>No More Heroes</td>
    </tr>
  </tbody>
  <tfoot>
    <tr>
      <th scope="row" colspan="2">Total albums</th>
      <td colspan="2">77</td>
    </tr>
  </tfoot>
</table>
```

--

## 表格样式-间距和布局

首先添加以下间距和布局来使得内容分布更加恰当。

```CSS
/* spacing */

table {
  table-layout: fixed;      /*根据标题宽度来分配列得宽度，使得内容宽度恰当*/
  width: 100%;              /*占满父容器*/
  border-collapse: collapse;/*合并表格边框*/
  border: 3px solid purple; /*紫色实线粗边框*/
}

thead th:nth-child(1) {     /*伪元素选中thead得第一个th子元素也就是第一列*/
  width: 30%;
}

thead th:nth-child(2) {     /*伪元素选中thead得第二个th子元素也就是第二列*/
  width: 20%;
}

thead th:nth-child(3) {     /*伪元素选中thead得第三个th子元素也就是第三列*/
  width: 15%;
}

thead th:nth-child(4) {     /*伪元素选中thead得第四个th子元素也就是第四列*/
  width: 35%;
}

th, td {                    /*所有标题和单元格都填空20px空白*/
  padding: 20px;
}
```

--

### 表格样式-排版

修改对齐和文字间距来排版。

```CSS
th {
  letter-spacing: 2px;
}

td {
  letter-spacing: 1px;
}

tbody td {
  text-align: center;
}

tfoot th {
  text-align: right;
}
```

--

### 表格样式-图形和颜色

添加背景图片和颜色来进一步美化。

```CSS
thead, tfoot {
  background: url(leopardskin.jpg);
  color: white;
  text-shadow: 1px 1px 1px black;
}

thead th, tfoot th, tfoot td {
  border: 3px solid purple;
}

tbody tr:nth-child(odd) {           /*奇数行一个颜色*/
  background-color: #ff33cc;
}

tbody tr:nth-child(even) {          /*偶数行一个颜色*/
  background-color: #e495e4;
}

tbody tr {
  background-image: url(noise.png); /*透明噪点背景*/
}

table {
  background-color: #ff33cc;
}
```

--

### 表格样式-标题

美化标题。

```CSS
caption {
  padding: 20px;
  font-style: italic;
  caption-side: bottom;       /*特殊标题样式，在底部显示标题。*/
  color: #666;
  text-align: right;
  letter-spacing: 1px;
}
```

---

## 盒子样式-高级样式

--

### 高级样式-阴影

与文字阴影类似，添加一个盒子阴影。

```CSS
p {
  margin: 0;
}

article {
  max-width: 500px;
  padding: 10px;
  background-color: red;
  background-image: linear-gradient(to bottom, rgba(0,0,0,0), rgba(0,0,0,0.25));
}

.simple {
  box-shadow: 5px 5px 5px rgba(0,0,0,0.7);
}
```

<!-- .element: style="float:left;width:48%;padding:1%;height:300px;display:flex;align-items:center;" -->

```html
<article class="simple">
  <p>
    <strong>Warning</strong>: The thermostat on the cosmic transcender has
    reached a critical level.
  </p>
</article>
```

<!-- .element: style="float:left;width:48%;padding:1%;height:300px;display:flex;align-items:center;" -->

--

### 高级样式-多重阴影

可以为同一个盒子添加不同得多个阴影，逗号分隔。

```CSS
p {
  margin: 0;
}

article {
  max-width: 500px;
  padding: 10px;
  background-color: red;
}

.simple {
  box-shadow: 5px 5px 5px rgba(0,0,0,0.7);
}
```

<!-- .element: style="float:left;width:48%;padding:1%;height:300px;display:flex;align-items:center;" -->

```html
<article class="simple">
  <p>
    <strong>Warning</strong>: The thermostat on the cosmic transcender has
    reached a critical level.
  </p>
</article>
```

<!-- .element: style="float:left;width:48%;padding:1%;height:300px;display:flex;align-items:center;" -->

--

### 高级样式-内部阴影

与文字不同之处在于，盒子还可以添加内部阴影。

```CSS
button {
  width: 150px;
  font-size: 1.1rem;
  line-height: 2;
  border-radius: 10px;
  border: none;
  box-shadow: 1px 1px 1px black,
              inset 2px 3px 5px rgba(0,0,0,0.3),
              inset -2px -3px 5px rgba(255,255,255,0.5);
}

button:active {
  box-shadow: inset 2px 2px 1px black,
              inset 2px 3px 5px rgba(0,0,0,0.3),
              inset -2px -3px 5px rgba(255,255,255,0.5);
}
```

<!-- .element: style="float:left;width:48%;padding:1%;height:300px;display:flex;align-items:center;" -->

```html
<button>Press me!</button>
```

<!-- .element: style="float:left;width:48%;padding:1%;height:300px;display:flex;align-items:center;" -->

---

# Q & A
